# Production Docker Compose Configuration
# This file extends the main docker-compose.yml with production-specific settings
#
# Usage:
#   docker-compose -f ../../docker-compose.yml -f docker-compose.production.yml up
#
# This approach eliminates configuration duplication while allowing production-specific overrides

services:
  opensearch:
    container_name: opensearch-production
    environment:
      # Production-optimized settings
      - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
      - OPENSEARCH_SECURITY_DISABLED=false  # Enable security in production
      - OPENSEARCH_SSL_HTTP_ENABLED=true
      - OPENSEARCH_SSL_TRANSPORT_ENABLED=true
      # Performance settings
      - OPENSEARCH_INDEX_BUFFER_SIZE=40%
      - OPENSEARCH_MIN_INDEX_BUFFER_SIZE=128mb
      - OPENSEARCH_WRITE_QUEUE_SIZE=2000
      - OPENSEARCH_SEARCH_QUEUE_SIZE=3000
    healthcheck:
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  api:
    build:
      dockerfile: deployment/docker/Dockerfile.production  # Use production Dockerfile
    container_name: worker-search-api
    ports:
      - "${API_PORT:-8000}:8000"  # Default to port 8000 for production
    environment:
      # Production environment settings
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - API_PORT=8000
      - API_WORKERS=4
      - API_RELOAD=false
      - API_ENABLE_DOCS=false  # Disable docs in production
      
      # Security settings
      - SECURITY_ENABLE_AUTH=true
      - SECURITY_JWT_SECRET=${JWT_SECRET:-change-in-production}
      
      # Performance optimization
      - CACHE_TTL_SECONDS=7200  # Longer cache in production
      - INDEXING_STRATEGY=eager
      - MODEL_BATCH_SIZE=64  # Larger batch size for production
    volumes:
      - ../../src/config:/app/src/config:ro  # Read-only config
      - api-logs:/app/logs  # Separate volume for logs
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  redis:
    environment:
      # Production Redis settings
      - REDIS_MAX_MEMORY=2gb
      - REDIS_MAXMEMORY_POLICY=allkeys-lru
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

# Production-specific volumes
volumes:
  api-logs:
    driver: local
